# -*- coding: utf-8 -*-
"""drug_prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gTdQpEsOhXg3WpxUkRLhmEE8xWHmWxn4

# "Predictive Drug Selection Model for Patients with Common Illness"
For this project, information was gathered regarding a group of patients who experienced a common ailment. Throughout their treatment regimen, these patients exhibited responses to medications A, B, C, X, and Y. The main objective of this project is to construct a model that can identify the appropriate medication for a future patient facing the same health condition. The dataset includes patient attributes such as age, sex, blood pressure, and cholesterol levels. The ultimate goal is to predict which medication will be suitable for new patients.

Import libraries:
"""

import sys
import numpy as np
import pandas as pd
from sklearn.tree import DecisionTreeClassifier
import sklearn.tree as tree
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn import preprocessing
from sklearn.model_selection import train_test_split

"""Read dataset:"""

data = pd.read_csv('https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-ML0101EN-SkillsNetwork/labs/Module%203/data/drug200.csv', delimiter=",")

"""## Data visualization"""

#Shape of dataset
print(data.shape)
# See all the columns
data.head()

"""The data has 6 characteristics and 200 atributes
In general, the data is smaller than others dataset, however we can predict the best drug for any pacient based in that charateristics before explained.
We need to see if dataset has null values:
"""

data.isnull().any()

"""This dataset has not null values."""

plt.figure(figsize = (5,5))
sns.histplot(data.Sex,color = 'Orange')

"""In this dataset we can see there is more masculine genre than femenine genre.
In therms of the drugs:
"""

sns.histplot(data.Drug, color = 'Green')

"""The drug most used is Drug Y and Drug X and then exist 5 clasifications of drugs.

"""

sns.histplot(data.BP,color = 'Blue')

sex_v = data.Sex.unique()
drug_v = data.Drug.unique()
bp_v = data.BP.unique()
chol_v = data.Cholesterol.unique()
print('Sex values: ',sex_v)
print('Drug values: ',drug_v)
print('BP values: ',bp_v)
print('Chrolesterol values: ',chol_v)

"""## Prepare data

We must separate the target and predictors values:
"""

data.columns

predictors = data[['Age', 'Sex', 'BP', 'Cholesterol', 'Na_to_K']].values
target = data['Drug'].values
print("Predictors: \n",predictors[0:5])
print("Target: \n",target[0:5])

"""Categorical variables need to convert in numerical values:"""

le_sex = preprocessing.LabelEncoder()
le_sex = le_sex.fit(['M','F'])
predictors[:,1] = le_sex.transform(predictors[:,1])

le_BP = preprocessing.LabelEncoder()
le_BP = le_BP.fit(bp_v)
predictors[:,2] = le_BP.transform(predictors[:,2])

le_ch = preprocessing.LabelEncoder()
le_ch = le_ch.fit(chol_v)
predictors[:,3] = le_ch.transform(predictors[:,3])

predictors[0:5]

"""We need to separate the train and test values"""

x_train,x_test,y_train,y_test = train_test_split(predictors,target,test_size = 0.3, random_state=5)

"""## Training and prediction"""

category_model = DecisionTreeClassifier(criterion="entropy", max_depth = 4)
category_model # it shows the default parameters

category_model.fit(x_train,y_train)

"""So we can predict any value. For this purpose, we use the x_test to test the model."""

predict = category_model.predict(x_test)

"""We can visualize the results for the predictions



"""

print(predict[0:5])
print(y_test[0:5])

"""In this case we can compare the predictions and the values of the test models. The values are the same.

## Evaluation of the model
"""

from sklearn import metrics
print("DecisionTrees's Accuracy: ", metrics.accuracy_score(y_test, predict))

"""The model has a good predicts for any value"""